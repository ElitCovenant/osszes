{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ambrusk\\\\Desktop\\\\library_repo\\\\osszes\\\\lbp_Teljes\\\\src\\\\Email.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Email.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loan() {\n  _s();\n  const [newEmail, setNewEmail] = useState('');\n  const [emailList, setEmailList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [recipients, setRecipients] = useState('');\n  const [file, setFile] = useState(null);\n  const [isPanelVisible, setIsPanelVisible] = useState(true); // Új állapot a panel láthatóságának kezelésére\n\n  // E-mail cím validálás\n  const isValidEmail = email => /\\S+@\\S+\\.\\S+/.test(email);\n  useEffect(() => {\n    // Az e-mail címek lekérése a komponens betöltésekor\n    const fetchEmails = async () => {\n      try {\n        const response = await fetch('/api/get-emails');\n        if (!response.ok) throw new Error('Hiba történt az e-mail címek lekérése közben.');\n        const emails = await response.json();\n        setEmailList(emails);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    fetchEmails();\n  }, []);\n  const saveEmail = async email => {\n    try {\n      const response = await fetch('https://localhost:7275/User', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) throw new Error('Hiba történt az e-mail cím mentése közben.');\n      // Sikeres mentés után frissítheted a lokális állapotot vagy visszajelzést adhatsz a felhasználónak\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const addEmail = () => {\n    if (newEmail && isValidEmail(newEmail) && !emailList.includes(newEmail)) {\n      setEmailList(prevEmails => [...prevEmails, newEmail]);\n      saveEmail(newEmail);\n      setNewEmail('');\n    } else {\n      alert(\"Kérjük, adjon meg egy érvényes e-mail címet!\");\n    }\n  };\n  const removeEmail = index => {\n    setEmailList(emailList.filter((_, i) => i !== index));\n  };\n  const sendMessage = async () => {\n    try {\n      const senderemail = {\n        to: recipients,\n        subject: \"Könyvtár kölcsönzés\",\n        body: message\n      };\n      const response = await fetch('https://localhost:7275/Email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(senderemail)\n      });\n      if (!response.ok) {\n        throw new Error('Hiba történt az üzenet küldése közben.');\n      }\n      setRecipients('');\n      setMessage('');\n      alert(\"Üzenet elküldve!\");\n    } catch (error) {\n      console.error('Hiba történt az üzenet küldése közben:', error.message);\n    }\n  };\n  const prepareMessage = () => {\n    const defaultMessage = \"Kedves Olvasónk! Ne feledje, hogy a kölcsönzött könyv(ek) visszahozatali határideje hamarosan lejár.\";\n    setMessage(defaultMessage);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setFile(file);\n  };\n  const handleClose = () => {\n    setIsPanelVisible(false); // Beállítja a panel láthatóságát hamisra\n  };\n  if (!isPanelVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Here you can add an email...\",\n        value: recipients,\n        onChange: e => setRecipients(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write your message here...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prepare-message\",\n        onClick: prepareMessage,\n        children: \"Prepared Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-panel\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Loan, \"zKaAZtrP6BSZuiH/Eqzc4gFBa+E=\");\n_c = Loan;\nexport default Loan;\nvar _c;\n$RefreshReg$(_c, \"Loan\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Loan","_s","newEmail","setNewEmail","emailList","setEmailList","message","setMessage","recipients","setRecipients","file","setFile","isPanelVisible","setIsPanelVisible","isValidEmail","email","test","fetchEmails","response","fetch","ok","Error","emails","json","error","console","saveEmail","method","headers","body","JSON","stringify","addEmail","includes","prevEmails","alert","removeEmail","index","filter","_","i","sendMessage","senderemail","to","subject","prepareMessage","defaultMessage","handleFileChange","e","target","files","handleClose","className","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ambrusk/Desktop/library_repo/osszes/lbp_Teljes/src/Email.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Email.css';\r\n\r\nfunction Loan() {\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [emailList, setEmailList] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [recipients, setRecipients] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [isPanelVisible, setIsPanelVisible] = useState(true); // Új állapot a panel láthatóságának kezelésére\r\n\r\n\r\n\r\n  // E-mail cím validálás\r\n  const isValidEmail = email => /\\S+@\\S+\\.\\S+/.test(email);\r\n\r\n  useEffect(() => {\r\n    // Az e-mail címek lekérése a komponens betöltésekor\r\n    const fetchEmails = async () => {\r\n      try {\r\n        const response = await fetch('/api/get-emails');\r\n        if (!response.ok) throw new Error('Hiba történt az e-mail címek lekérése közben.');\r\n        const emails = await response.json();\r\n        setEmailList(emails);\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    fetchEmails();\r\n  }, []);\r\n\r\n  const saveEmail = async (email) => {\r\n    try {\r\n\r\n        const response = await fetch('https://localhost:7275/User', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      if (!response.ok) throw new Error('Hiba történt az e-mail cím mentése közben.');\r\n      // Sikeres mentés után frissítheted a lokális állapotot vagy visszajelzést adhatsz a felhasználónak\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const addEmail = () => {\r\n    if (newEmail && isValidEmail(newEmail) && !emailList.includes(newEmail)) {\r\n      setEmailList(prevEmails => [...prevEmails, newEmail]);\r\n      saveEmail(newEmail);\r\n      setNewEmail('');\r\n    } else {\r\n      alert(\"Kérjük, adjon meg egy érvényes e-mail címet!\");\r\n    }\r\n  };\r\n\r\n  const removeEmail = index => {\r\n    setEmailList(emailList.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const senderemail = {\r\n        to: recipients,\r\n        subject: \"Könyvtár kölcsönzés\",\r\n        body: message\r\n      };\r\n  \r\n      const response = await fetch('https://localhost:7275/Email', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(senderemail)\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Hiba történt az üzenet küldése közben.');\r\n      }\r\n      \r\n      setRecipients('');\r\n      setMessage('');\r\n      alert(\"Üzenet elküldve!\");\r\n    } catch (error) {\r\n      console.error('Hiba történt az üzenet küldése közben:', error.message);\r\n    }\r\n  };\r\n\r\n  const prepareMessage = () => {\r\n    const defaultMessage = \"Kedves Olvasónk! Ne feledje, hogy a kölcsönzött könyv(ek) visszahozatali határideje hamarosan lejár.\";\r\n    setMessage(defaultMessage);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n  };\r\n\r\n  \r\n  \r\n  const handleClose = () => {\r\n    setIsPanelVisible(false); // Beállítja a panel láthatóságát hamisra\r\n  };\r\n\r\n  if (!isPanelVisible) return null;\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"message-window\">\r\n        <input type=\"text\" placeholder=\"Here you can add an email...\" value={recipients} onChange={(e) => setRecipients(e.target.value)} />\r\n        <textarea placeholder=\"Write your message here...\" value={message} onChange={(e) => setMessage(e.target.value)}></textarea>\r\n        <button onClick={sendMessage}>Send</button>\r\n        <button className='prepare-message' onClick={prepareMessage}>Prepared Text</button>\r\n        <button className='close-panel' onClick={handleClose}>Close</button>\r\n      </div>\r\n      {/* <div className=\"email-list-window\">\r\n        <input type=\"text\" placeholder=\"Új e-mail cím hozzáadása...\" value={newEmail} onChange={(e) => setNewEmail(e.target.value)} />\r\n        <button onClick={addEmail}>Hozzáad</button>\r\n        <ul>\r\n          {emailList.map((email, index) => (\r\n            <li key={index}>{email} <button onClick={() => removeEmail(index)}>Törlés</button></li>\r\n          ))}\r\n        </ul>\r\n      </div> */}\r\n      {/* { <div>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        {file && <p>Feltöltött fájl: {file.name}</p>}\r\n      </div> } */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loan;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAI5D;EACA,MAAMkB,YAAY,GAAGC,KAAK,IAAI,cAAc,CAACC,IAAI,CAACD,KAAK,CAAC;EAExDlB,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;QAC/C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;QAClF,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpClB,YAAY,CAACiB,MAAM,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAClB,OAAO,CAAC;MAC9B;IACF,CAAC;IACDW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAG,MAAOX,KAAK,IAAK;IACjC,IAAI;MAEA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC5DQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB;QAAM,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;MAC/E;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAClB,OAAO,CAAC;IAC9B;EACF,CAAC;EAED,MAAM0B,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI9B,QAAQ,IAAIY,YAAY,CAACZ,QAAQ,CAAC,IAAI,CAACE,SAAS,CAAC6B,QAAQ,CAAC/B,QAAQ,CAAC,EAAE;MACvEG,YAAY,CAAC6B,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAEhC,QAAQ,CAAC,CAAC;MACrDwB,SAAS,CAACxB,QAAQ,CAAC;MACnBC,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,MAAM;MACLgC,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,MAAMC,WAAW,GAAGC,KAAK,IAAI;IAC3BhC,YAAY,CAACD,SAAS,CAACkC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;EACvD,CAAC;EAED,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,WAAW,GAAG;QAClBC,EAAE,EAAEnC,UAAU;QACdoC,OAAO,EAAE,qBAAqB;QAC9Bf,IAAI,EAAEvB;MACR,CAAC;MAED,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACxB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAC3D;MAEAZ,aAAa,CAAC,EAAE,CAAC;MACjBF,UAAU,CAAC,EAAE,CAAC;MACd4B,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAClB,OAAO,CAAC;IACxE;EACF,CAAC;EAED,MAAMuC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,cAAc,GAAG,sGAAsG;IAC7HvC,UAAU,CAACuC,cAAc,CAAC;EAC5B,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMtC,IAAI,GAAGsC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BvC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAID,MAAMyC,WAAW,GAAGA,CAAA,KAAM;IACxBtC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,IAAI,CAACD,cAAc,EAAE,OAAO,IAAI;EAIhC,oBACEb,OAAA;IAAKqD,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBtD,OAAA;MAAKqD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BtD,OAAA;QAAOuD,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,8BAA8B;QAACC,KAAK,EAAEhD,UAAW;QAACiD,QAAQ,EAAGT,CAAC,IAAKvC,aAAa,CAACuC,CAAC,CAACC,MAAM,CAACO,KAAK;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnI9D,OAAA;QAAUwD,WAAW,EAAC,4BAA4B;QAACC,KAAK,EAAElD,OAAQ;QAACmD,QAAQ,EAAGT,CAAC,IAAKzC,UAAU,CAACyC,CAAC,CAACC,MAAM,CAACO,KAAK;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC3H9D,OAAA;QAAQ+D,OAAO,EAAErB,WAAY;QAAAY,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3C9D,OAAA;QAAQqD,SAAS,EAAC,iBAAiB;QAACU,OAAO,EAAEjB,cAAe;QAAAQ,QAAA,EAAC;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnF9D,OAAA;QAAQqD,SAAS,EAAC,aAAa;QAACU,OAAO,EAAEX,WAAY;QAAAE,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAcH,CAAC;AAEV;AAAC5D,EAAA,CAjIQD,IAAI;AAAA+D,EAAA,GAAJ/D,IAAI;AAmIb,eAAeA,IAAI;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}