{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Felhasznalo\\\\OneDrive\\\\Asztali g\\xE9p\\\\lbp_Teljes1\\\\lbp_Teljes\\\\src\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport LanguageSelector from './LanguageSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLogo1, setIsLogo1] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  const [searchHistory, setSearchHistory] = useState([]);\n  const toggleLogo = () => {\n    setIsLogo1(prev => !prev);\n  };\n  const handleSearch = () => {\n    if (searchTerm !== '') {\n      const updatedHistory = new Set([searchTerm, ...searchHistory]);\n      setSearchHistory([...updatedHistory]);\n      navigate(`/books?search=${encodeURIComponent(searchTerm)}`);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(toggleLogo, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for books...\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onKeyPress: handleKeyPress,\n        list: \"book_search_history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), searchHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"book_search_history\",\n        children: searchHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"Hx0ZEuzebQ4jygKHZoEnTVwx4SI=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","LanguageSelector","jsxDEV","_jsxDEV","Navbar","_s","isLogo1","setIsLogo1","searchTerm","setSearchTerm","navigate","searchHistory","setSearchHistory","toggleLogo","prev","handleSearch","updatedHistory","Set","encodeURIComponent","handleKeyPress","e","key","intervalId","setInterval","clearInterval","className","children","type","placeholder","value","onChange","target","onKeyPress","list","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","id","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Felhasznalo/OneDrive/Asztali gÃ©p/lbp_Teljes1/lbp_Teljes/src/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport LanguageSelector from './LanguageSelector';\r\n\r\nconst Navbar = () => {\r\n  const [isLogo1, setIsLogo1] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const navigate = useNavigate();\r\n  const [searchHistory, setSearchHistory] = useState([]);\r\n\r\n  const toggleLogo = () => {\r\n    setIsLogo1(prev => !prev);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (searchTerm !== '') {\r\n      const updatedHistory = new Set([searchTerm, ...searchHistory]);\r\n      setSearchHistory([...updatedHistory]);\r\n      navigate(`/books?search=${encodeURIComponent(searchTerm)}`);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(toggleLogo, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      {/* Navbar tartalma */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for books...\"\r\n          className=\"search-input\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          list=\"book_search_history\"\r\n        />\r\n        <button className=\"search-button\" onClick={handleSearch}>Search</button>\r\n        {searchHistory.length > 0 && (\r\n          <datalist id=\"book_search_history\">\r\n            {searchHistory.map((item, index) => (\r\n              <option key={index} value={item} />\r\n            ))}\r\n          </datalist>\r\n        )}\r\n      </div>\r\n      <LanguageSelector />\r\n    </nav>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}